"use strict";(self.webpackChunkbleep_site=self.webpackChunkbleep_site||[]).push([[6824],{5114:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var n=a(7462),i=(a(7294),a(3905));var l=a(814);const s={},r="But my build does much more!",o={unversionedId:"plugins",id:"plugins",title:"But my build does much more!",description:"Yes, your build does other things.",source:"@site/docs/plugins.mdx",sourceDirName:".",slug:"/plugins",permalink:"/docs/plugins",draft:!1,tags:[],version:"current",frontMatter:{}},p={},u=[{value:"Scripts",id:"scripts",level:3},{value:"Running",id:"running",level:3},{value:"An example",id:"an-example",level:3}],m={toc:u};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"but-my-build-does-much-more"},"But my build does much more!"),(0,i.kt)("p",null,"Yes, your build does other things."),(0,i.kt)("p",null,"It generates code, it distributes artifacts, it builds websites. Probably a lot more"),(0,i.kt)("p",null,"But none of this has to be in the build itself!"),(0,i.kt)("h3",{id:"scripts"},"Scripts"),(0,i.kt)("p",null,"Bleep introduces ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts"),".\nDefined in your build file as the ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts")," in a ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),", it allows you to run any class with a ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"projects:\n  myscripts:\n    dependencies: build.bleep::bleep-tasks-publishing:${BLEEP_VERSION}\n    scala:\n      version: 3.2.0\nscripts:\n  native-image: myscripts/mypackage.GenNativeImage\n")),(0,i.kt)("h3",{id:"running"},"Running"),(0,i.kt)("p",null,"You can run the script like this, it can be tab-completed to save some keystrokes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ bleep native-image\n")),(0,i.kt)("h3",{id:"an-example"},"An example"),(0,i.kt)("p",null,"Bleep provides you with the entire build in a structured format, so you can query projects,\npaths and so on."),(0,i.kt)(l.Z,{language:"scala",mdxType:"CodeBlock"},'package bleep\npackage scripts\n\nimport bleep.tasks._\n\nobject GenNativeImage extends BleepScript("GenNativeImage") {\n  def run(started: Started, commands: Commands, args: List[String]): Unit = {\n    val projectName = model.CrossProjectName(model.ProjectName("bleep-cli"), crossId = None)\n    val project = started.bloopProjects(projectName)\n    commands.compile(List(projectName))\n\n    val plugin = new NativeImagePlugin(\n      project = project,\n      logger = started.logger,\n      nativeImageOptions = """--no-fallback\n        --enable-http\n        --enable-https\n        -H:+ReportExceptionStackTraces\n        --initialize-at-build-time=scala.runtime.Statics$VM\n        --initialize-at-build-time=scala.Symbol\n        --initialize-at-build-time=scala.Symbol$\n        --native-image-info""".split("\\n").map(_.trim),\n      nativeImageJvm = started.build.jvm.getOrElse(model.Jvm.graalvm),\n      env = List(\n        ("USE_NATIVE_IMAGE_JAVA_PLATFORM_MODULE_SYSTEM", "false")\n      )\n    ) {\n      // allow user to pass in name of generated binary as parameter\n      override val nativeImageOutput = args.headOption match {\n        case Some(relPath) =>\n          // smoothen over some irritation from github action scripts\n          val relPathNoExe = if (relPath.endsWith(".exe")) relPath.dropRight(".exe".length) else relPath\n          started.prebootstrapped.buildPaths.cwd / relPathNoExe\n        case None => super.nativeImageOutput\n      }\n    }\n    val path = plugin.nativeImage()\n    started.logger.info(s"Created native-image at $path")\n  }\n}\n'),(0,i.kt)("p",null,"It might already be clear to you, but anyway:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"you can start this program from bleep (",(0,i.kt)("inlineCode",{parentName:"li"},"bleep native-image"),"), from your IDE, from anywhere"),(0,i.kt)("li",{parentName:"ul"},"you can debug it like a normal program"),(0,i.kt)("li",{parentName:"ul"},"you have all the structured info from the build, without having to express code in your build"),(0,i.kt)("li",{parentName:"ul"},"you can include any dependencies you want, from any scala version. No class loader issues."),(0,i.kt)("li",{parentName:"ul"},"you can even write your scripts for any platform"),(0,i.kt)("li",{parentName:"ul"},"NativeImagePlugin is directly ported from sbt. In fact most interesting sbt plugins can be ported quite easily! setting = ",(0,i.kt)("inlineCode",{parentName:"li"},"val"),", task = ",(0,i.kt)("inlineCode",{parentName:"li"},"def"),".")))}d.isMDXComponent=!0}}]);